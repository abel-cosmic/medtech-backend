generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SystemLog {
  id        Int      @id @default(autoincrement())
  userId    Int
  action    String
  details   String?
  timestamp DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id           Int           @id @default(autoincrement())
  userType     UserType
  firstName    String
  lastName     String
  username     String        @unique
  phoneNumber  String        @unique
  password     String
  fillerCode   String?       @unique
  pricePerForm Int?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  SuperAdmin   SuperAdmin[]
  Admin        Admin[]
  DataEncoder  DataEncoder[]
  Filler       Filler[]
  SystemLog    SystemLog[]
}

model Filler {
  id           Int            @id @default(autoincrement())
  userId       Int?
  branchId     Int
  fillerCode   String         @unique
  pricePerForm Int
  FormAssigned FormAssigned[]
  Payment      Payment[]
  User         User?          @relation(fields: [userId], references: [id])
}

model Admin {
  id           Int            @id @default(autoincrement())
  userId       Int
  formAssigned FormAssigned[]
  payments     Payment[]
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SuperAdmin {
  id     Int  @id @default(autoincrement())
  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DataEncoder {
  id     Int    @id @default(autoincrement())
  userId Int
  Form   Form[]
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Payment {
  id              Int           @id @default(autoincrement())
  adminId         Int
  fillerId        Int?
  name            String
  description     String?
  madeBy          String
  madeTo          String
  accountNumber   String?
  referenceNumber String?
  amount          Int
  method          PaymentMethod
  startDate       DateTime?
  endDate         DateTime?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
  filler          Filler?       @relation(fields: [fillerId], references: [id], onDelete: Cascade)
  admin           Admin         @relation(fields: [adminId], references: [id], onDelete: Cascade)
}

model FormAssigned {
  id                Int        @id @default(autoincrement())
  formId            Int
  fillerId          Int
  adminId           Int
  status            StatusType
  applicationNumber String
  filledStatus      Boolean
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @default(now())
  filler            Filler     @relation(fields: [fillerId], references: [id], onDelete: Cascade)
  admin             Admin      @relation(fields: [adminId], references: [id], onDelete: Cascade)
  form              Form       @relation(fields: [formId], references: [id], onDelete: Cascade)
}

model Form {
  id               Int            @id @default(autoincrement())
  dataEncoderId    Int
  regionId         Int
  firstName        String
  middleName       String
  lastName         String
  firstNameAm      String
  middleNameAm     String
  lastNameAm       String
  birthDate        String
  birthPlace       String
  city             String
  birthCertificate String
  identification   String
  status           FormStatus
  totalPrice       Int
  brokerCost       Int
  remainingPrice   Int
  issueDate        String
  submissionDate   String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now())
  dataEncoder      DataEncoder    @relation(fields: [dataEncoderId], references: [id], onDelete: Cascade)
  region           Region         @relation(fields: [regionId], references: [id], onDelete: Cascade)
  FormAssigned     FormAssigned[]
}

model Region {
  id         Int      @id @default(autoincrement())
  regionName String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  Form       Form[]
}

enum FormStatus {
  NOTFILLED
  ASSIGNED
  FILLED
  PAID
}

enum PaymentMethod {
  CASH
  BANKING
}

enum UserType {
  ADMIN
  FILLER
  SUPERADMIN
  DATAENCODER
}

enum StatusType {
  NOTFILLED
  FILLED
  PAYMENTPENDING
  PAID
}
